;; produced by cvc4_16_smtcomp.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTNIA)
(set-info :source |
Generated by: Rod Chapman
Generated on: 2024-02-26
Generator: GNATProve 13.2.1 and Why3 1.5.0
Application: Proof of LibMLKEM Cryptographic Library
Target solver: CVC4, CVC5, Z3
Publications: https://github.com/awslabs/LibMLKEM
|)
(set-info :license "https://www.apache.org/licenses/LICENSE-2.0")
(set-info :category "industrial")
(set-info :status unsat)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort us_private 0)

(declare-const us_null_ext__ us_private)

(declare-datatypes ((int__ref 0))
  (((int__refqtmk (int__content Int)))))

;; power
(declare-fun power (Int
  Int) Int)

;; Power_0
(assert (forall ((x Int)) (= (power x 0) 1)))

;; Power_s
(assert
  (forall ((x Int) (n Int))
    (=> (<= 0 n) (= (power x (+ n 1)) (* x (power x n))))))

;; Power_s_alt
(assert
  (forall ((x Int) (n Int))
    (=> (< 0 n) (= (power x n) (* x (power x (- n 1)))))))

;; Power_1
(assert (forall ((x Int)) (= (power x 1) x)))

;; Power_sum
(assert
  (forall ((x Int) (n Int) (m Int))
    (=>
      (<= 0 n)
      (=> (<= 0 m) (= (power x (+ n m)) (* (power x n) (power x m)))))))

;; Power_mult
(assert
  (forall ((x Int) (n Int) (m Int))
    (=> (<= 0 n) (=> (<= 0 m) (= (power x (* n m)) (power (power x n) m))))))

;; Power_comm1
(assert
  (forall ((x Int) (y Int))
    (=>
      (= (* x y) (* y x))
      (forall ((n Int))
        (=> (<= 0 n) (= (* (power x n) y) (* y (power x n))))))))

;; Power_comm2
(assert
  (forall ((x Int) (y Int))
    (=>
      (= (* x y) (* y x))
      (forall ((n Int))
        (=> (<= 0 n) (= (power (* x y) n) (* (power x n) (power y n))))))))

;; Power_non_neg
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (<= 0 y)) (<= 0 (power x y)))))

;; Power_pos
(assert
  (forall ((x Int) (y Int)) (=> (and (< 0 x) (<= 0 y)) (< 0 (power x y)))))

;; Power_monotonic
(assert
  (forall ((x Int) (n Int) (m Int))
    (=> (and (< 0 x) (and (<= 0 n) (<= n m))) (<= (power x n) (power x m)))))

;; nth
(declare-fun nth ((_ BitVec 8)
  Int) Bool)

;; lsr
(declare-fun lsr ((_ BitVec 8)
  Int) (_ BitVec 8))

;; asr
(declare-fun asr ((_ BitVec 8)
  Int) (_ BitVec 8))

;; lsl
(declare-fun lsl ((_ BitVec 8)
  Int) (_ BitVec 8))

;; abs
(define-fun abs1 ((x Int)) Int
  (ite (<= 0 x) x (- x)))

;; Abs_le
(assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
(assert (forall ((x Int)) (<= 0 (abs1 x))))

;; Div_unique
(assert
  (forall ((x Int) (y Int) (q Int))
    (=>
      (< 0 y)
      (=> (and (<= (* q y) x) (< x (+ (* q y) y))) (= (div x y) q)))))

;; Div_bound
(assert
  (forall ((x Int) (y Int))
    (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div x y)) (<= (div x y) x)))))

;; Div_inf
(assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div x y) 0))))

;; Div_inf_neg
(assert
  (forall ((x Int) (y Int))
    (=> (and (< 0 x) (<= x y)) (= (div (- x) y) (- 1)))))

;; Mod_0
(assert (forall ((y Int)) (=> (not (= y 0)) (= (mod 0 y) 0))))

;; Div_1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (div 1 y) 0))))

;; Div_minus1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (div (- 1) y) (- 1)))))

;; Mod_1_left
(assert (forall ((y Int)) (=> (< 1 y) (= (mod 1 y) 1))))

;; Mod_minus1_left
(assert
  (forall ((y Int))
    (! (=> (< 1 y) (= (mod (- 1) y) (- y 1))) :pattern ((mod (- 1) y)) )))

;; Div_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=> (< 0 x) (= (div (+ (* x y) z) x) (+ y (div z x)))) :pattern ((div (+ (* x y) z) x)) )))

;; Mod_mult
(assert
  (forall ((x Int) (y Int) (z Int))
    (! (=> (< 0 x) (= (mod (+ (* x y) z) x) (mod z x))) :pattern ((mod (+ (* x y) z) x)) )))

;; pow2
(declare-fun pow2 (Int) Int)

(declare-const two_power_size_minus_one Int)

;; two_power_size_minus_one_val
(assert (= two_power_size_minus_one (pow2 (- 8 1))))

;; to_int
(define-fun to_int1 ((x (_ BitVec 8))) Int
  (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))

;; lsr_bv_is_lsr
(assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
    (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
(assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
    (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
(assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
    (= (bvshl x n) (lsl x (bv2nat n)))))

;; nth_bv
(declare-fun nth_bv ((_ BitVec 8)
  (_ BitVec 8)) Bool)

;; nth_bv_def
(assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
    (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
(assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
    (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
(assert
  (forall ((x (_ BitVec 8)) (i Int))
    (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-datatypes ((t__ref 0))
  (((t__refqtmk (t__content (_ BitVec 8))))))

;; min
(define-fun min ((x Int) (y Int)) Int
  (ite (<= x y) x y))

;; max
(define-fun max ((x Int) (y Int)) Int
  (ite (<= x y) y x))

;; Min_r
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
(assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
(assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
(assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
(assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; nth
(declare-fun nth1 ((_ BitVec 16)
  Int) Bool)

;; lsr
(declare-fun lsr1 ((_ BitVec 16)
  Int) (_ BitVec 16))

;; asr
(declare-fun asr1 ((_ BitVec 16)
  Int) (_ BitVec 16))

;; lsl
(declare-fun lsl1 ((_ BitVec 16)
  Int) (_ BitVec 16))

(declare-const two_power_size_minus_one1 Int)

;; two_power_size_minus_one_val
(assert (= two_power_size_minus_one1 (pow2 (- 16 1))))

;; to_int
(define-fun to_int2 ((x (_ BitVec 16))) Int
  (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))

;; lsr_bv_is_lsr
(assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
    (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
(assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
    (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
(assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
    (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; nth_bv
(declare-fun nth_bv1 ((_ BitVec 16)
  (_ BitVec 16)) Bool)

;; nth_bv_def
(assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
    (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
(assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
    (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
(assert
  (forall ((x (_ BitVec 16)) (i Int))
    (=>
      (and (<= 0 i) (< i 65536))
      (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-sort t 0)

;; in_range
(define-fun in_range ((x (_ BitVec 16))) Bool
  (and (bvule #x0000 x) (bvule x #x0D00)))

(declare-const dummy t)

;; to_rep
(declare-fun to_rep (t) (_ BitVec 16))

;; of_rep
(declare-fun of_rep ((_ BitVec 16)) t)

;; inversion_axiom
(assert
  (forall ((x t)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
(assert (forall ((x t)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
(assert
  (forall ((x (_ BitVec 16)))
    (! (let ((y (bvurem x #x0D01)))
         (=> (in_range y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                                  (of_rep x))) )))

(declare-datatypes ((map__ref 0))
  (((map__refqtmk (map__content (Array Int t))))))

(declare-const zeta_expc (Array (_ BitVec 8) t))

(declare-const f (Array Int t))

(declare-sort tinteger_32B 0)

;; tinteger_32B'int
(declare-fun tinteger_32Bqtint (tinteger_32B) Int)

;; tinteger_32B'axiom
(assert
  (forall ((i tinteger_32B))
    (and
      (<= (- 2147483648) (tinteger_32Bqtint i))
      (<= (tinteger_32Bqtint i) 2147483647))))

;; in_range
(define-fun in_range1 ((x Int)) Bool
  (and (<= (- 2147483648) x) (<= x 2147483647)))

(declare-const dummy1 tinteger_32B)

(declare-sort i32 0)

(declare-const dummy2 i32)

(declare-sort index_256 0)

;; in_range
(define-fun in_range2 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

(declare-const dummy3 index_256)

(declare-sort ntt_len_bit_index 0)

;; in_range
(define-fun in_range3 ((x Int)) Bool
  (and (<= 0 x) (<= x 6)))

(declare-const dummy4 ntt_len_bit_index)

(declare-sort len_t 0)

;; in_range
(define-fun in_range4 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

(declare-const dummy5 len_t)

;; dynamic_invariant
(define-fun dynamic_invariant ((temp___expr_981 Int) (temp___is_init_977 Bool) (temp___skip_constant_978 Bool) (temp___do_toplevel_979 Bool) (temp___do_typ_inv_980 Bool)) Bool
  (and
    (in_range4 temp___expr_981)
    (=>
      (= temp___do_toplevel_979 true)
      (=>
        (= temp___is_init_977 true)
        (exists ((i Int))
          (and
            (and (<= 1 i) (<= i 7))
            (= temp___expr_981 (let ((temp___983 2)) (power temp___983 i)))))))))

(declare-sort count_t 0)

;; in_range
(define-fun in_range5 ((x Int)) Bool
  (and (<= 0 x) (<= x 255)))

(declare-const dummy6 count_t)

;; dynamic_invariant
(define-fun dynamic_invariant1 ((temp___expr_990 Int) (temp___is_init_986 Bool) (temp___skip_constant_987 Bool) (temp___do_toplevel_988 Bool) (temp___do_typ_inv_989 Bool)) Bool
  (and
    (in_range5 temp___expr_990)
    (=>
      (= temp___do_toplevel_988 true)
      (=>
        (= temp___is_init_986 true)
        (exists ((i Int))
          (and
            (and (<= 0 i) (<= i 6))
            (= temp___expr_990 (let ((temp___992 2)) (power temp___992 i)))))))))

(declare-sort k_t 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))

;; in_range
(define-fun in_range6 ((x (_ BitVec 8))) Bool
  (and (bvule #x00 x) (bvule x #x7F)))

(declare-const dummy7 k_t)

;; to_rep
(define-fun to_rep1 ((x tinteger_32B)) Int
  (tinteger_32Bqtint x))

;; of_rep
(declare-fun of_rep1 (Int) tinteger_32B)

;; inversion_axiom
(assert
  (forall ((x tinteger_32B))
    (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
(assert
  (forall ((x tinteger_32B))
    (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
(assert
  (forall ((x Int))
    (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                                  (of_rep1 x))) )))

;; dynamic_property
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool
  (and (<= first_int x) (<= x last_int)))

(declare-const dummy8 tinteger_32B)

;; mlkem__zeta_expc__aggregate_def
(declare-fun mlkem__zeta_expc__aggregate_def ((_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)
  (_ BitVec 16)) (Array (_ BitVec 8) t))

;; zeta_expc__def_axiom
(assert
  (= zeta_expc (let ((temp___446 (mlkem__zeta_expc__aggregate_def
                                   #x0001
                                   #x06C1
                                   #x0A14
                                   #x0CD9
                                   #x0A52
                                   #x0276
                                   #x0769
                                   #x0350
                                   #x0426
                                   #x077F
                                   #x00C1
                                   #x031D
                                   #x0AE2
                                   #x0CBC
                                   #x0239
                                   #x06D2
                                   #x0128
                                   #x098F
                                   #x053B
                                   #x05C4
                                   #x0BE6
                                   #x0038
                                   #x08C0
                                   #x0535
                                   #x0592
                                   #x082E
                                   #x0217
                                   #x0B42
                                   #x0959
                                   #x0B3F
                                   #x07B6
                                   #x0335
                                   #x0121
                                   #x014B
                                   #x0CB5
                                   #x06DC
                                   #x04AD
                                   #x0900
                                   #x08E5
                                   #x0807
                                   #x028A
                                   #x07B9
                                   #x09D1
                                   #x0278
                                   #x0B31
                                   #x0021
                                   #x0528
                                   #x077B
                                   #x090F
                                   #x059B
                                   #x0327
                                   #x01C4
                                   #x059E
                                   #x0B34
                                   #x05FE
                                   #x0962
                                   #x0A57
                                   #x0A39
                                   #x05C9
                                   #x0288
                                   #x09AA
                                   #x0C26
                                   #x04CB
                                   #x038E
                                   #x0011
                                   #x0AC9
                                   #x0247
                                   #x0A59
                                   #x0665
                                   #x02D3
                                   #x08F0
                                   #x044C
                                   #x0581
                                   #x0A66
                                   #x0CD1
                                   #x00E9
                                   #x02F4
                                   #x086C
                                   #x0BC7
                                   #x0BEA
                                   #x06A7
                                   #x0673
                                   #x0AE5
                                   #x06FD
                                   #x0737
                                   #x03B8
                                   #x05B5
                                   #x0A7F
                                   #x03AB
                                   #x0904
                                   #x0985
                                   #x0954
                                   #x02DD
                                   #x0921
                                   #x010C
                                   #x0281
                                   #x0630
                                   #x08FA
                                   #x07F5
                                   #x0C94
                                   #x0177
                                   #x09F5
                                   #x082A
                                   #x066D
                                   #x0427
                                   #x013F
                                   #x0AD5
                                   #x02F5
                                   #x0833
                                   #x0231
                                   #x09A2
                                   #x0A22
                                   #x0AF4
                                   #x0444
                                   #x0193
                                   #x0402
                                   #x0477
                                   #x0866
                                   #x0AD7
                                   #x0376
                                   #x06BA
                                   #x04BC
                                   #x0752
                                   #x0405
                                   #x083E
                                   #x0B77
                                   #x0375
                                   #x086A)))
                 (let ((temp___447 temp___446)) temp___447))))

;; def_axiom
(assert
  (forall ((temp___317 (_ BitVec 16)) (temp___318 (_ BitVec 16)) (temp___319 (_ BitVec 16)) (temp___320 (_ BitVec 16)) (temp___321 (_ BitVec 16)) (temp___322 (_ BitVec 16)) (temp___323 (_ BitVec 16)) (temp___324 (_ BitVec 16)) (temp___325 (_ BitVec 16)) (temp___326 (_ BitVec 16)) (temp___327 (_ BitVec 16)) (temp___328 (_ BitVec 16)) (temp___329 (_ BitVec 16)) (temp___330 (_ BitVec 16)) (temp___331 (_ BitVec 16)) (temp___332 (_ BitVec 16)) (temp___333 (_ BitVec 16)) (temp___334 (_ BitVec 16)) (temp___335 (_ BitVec 16)) (temp___336 (_ BitVec 16)) (temp___337 (_ BitVec 16)) (temp___338 (_ BitVec 16)) (temp___339 (_ BitVec 16)) (temp___340 (_ BitVec 16)) (temp___341 (_ BitVec 16)) (temp___342 (_ BitVec 16)) (temp___343 (_ BitVec 16)) (temp___344 (_ BitVec 16)) (temp___345 (_ BitVec 16)) (temp___346 (_ BitVec 16)) (temp___347 (_ BitVec 16)) (temp___348 (_ BitVec 16)) (temp___349 (_ BitVec 16)) (temp___350 (_ BitVec 16)) (temp___351 (_ BitVec 16)) (temp___352 (_ BitVec 16)) (temp___353 (_ BitVec 16)) (temp___354 (_ BitVec 16)) (temp___355 (_ BitVec 16)) (temp___356 (_ BitVec 16)) (temp___357 (_ BitVec 16)) (temp___358 (_ BitVec 16)) (temp___359 (_ BitVec 16)) (temp___360 (_ BitVec 16)) (temp___361 (_ BitVec 16)) (temp___362 (_ BitVec 16)) (temp___363 (_ BitVec 16)) (temp___364 (_ BitVec 16)) (temp___365 (_ BitVec 16)) (temp___366 (_ BitVec 16)) (temp___367 (_ BitVec 16)) (temp___368 (_ BitVec 16)) (temp___369 (_ BitVec 16)) (temp___370 (_ BitVec 16)) (temp___371 (_ BitVec 16)) (temp___372 (_ BitVec 16)) (temp___373 (_ BitVec 16)) (temp___374 (_ BitVec 16)) (temp___375 (_ BitVec 16)) (temp___376 (_ BitVec 16)) (temp___377 (_ BitVec 16)) (temp___378 (_ BitVec 16)) (temp___379 (_ BitVec 16)) (temp___380 (_ BitVec 16)) (temp___381 (_ BitVec 16)) (temp___382 (_ BitVec 16)) (temp___383 (_ BitVec 16)) (temp___384 (_ BitVec 16)) (temp___385 (_ BitVec 16)) (temp___386 (_ BitVec 16)) (temp___387 (_ BitVec 16)) (temp___388 (_ BitVec 16)) (temp___389 (_ BitVec 16)) (temp___390 (_ BitVec 16)) (temp___391 (_ BitVec 16)) (temp___392 (_ BitVec 16)) (temp___393 (_ BitVec 16)) (temp___394 (_ BitVec 16)) (temp___395 (_ BitVec 16)) (temp___396 (_ BitVec 16)) (temp___397 (_ BitVec 16)) (temp___398 (_ BitVec 16)) (temp___399 (_ BitVec 16)) (temp___400 (_ BitVec 16)) (temp___401 (_ BitVec 16)) (temp___402 (_ BitVec 16)) (temp___403 (_ BitVec 16)) (temp___404 (_ BitVec 16)) (temp___405 (_ BitVec 16)) (temp___406 (_ BitVec 16)) (temp___407 (_ BitVec 16)) (temp___408 (_ BitVec 16)) (temp___409 (_ BitVec 16)) (temp___410 (_ BitVec 16)) (temp___411 (_ BitVec 16)) (temp___412 (_ BitVec 16)) (temp___413 (_ BitVec 16)) (temp___414 (_ BitVec 16)) (temp___415 (_ BitVec 16)) (temp___416 (_ BitVec 16)) (temp___417 (_ BitVec 16)) (temp___418 (_ BitVec 16)) (temp___419 (_ BitVec 16)) (temp___420 (_ BitVec 16)) (temp___421 (_ BitVec 16)) (temp___422 (_ BitVec 16)) (temp___423 (_ BitVec 16)) (temp___424 (_ BitVec 16)) (temp___425 (_ BitVec 16)) (temp___426 (_ BitVec 16)) (temp___427 (_ BitVec 16)) (temp___428 (_ BitVec 16)) (temp___429 (_ BitVec 16)) (temp___430 (_ BitVec 16)) (temp___431 (_ BitVec 16)) (temp___432 (_ BitVec 16)) (temp___433 (_ BitVec 16)) (temp___434 (_ BitVec 16)) (temp___435 (_ BitVec 16)) (temp___436 (_ BitVec 16)) (temp___437 (_ BitVec 16)) (temp___438 (_ BitVec 16)) (temp___439 (_ BitVec 16)) (temp___440 (_ BitVec 16)) (temp___441 (_ BitVec 16)) (temp___442 (_ BitVec 16)) (temp___443 (_ BitVec 16)) (temp___444 (_ BitVec 16)))
    (let ((temp___316 (mlkem__zeta_expc__aggregate_def
                        temp___317
                        temp___318
                        temp___319
                        temp___320
                        temp___321
                        temp___322
                        temp___323
                        temp___324
                        temp___325
                        temp___326
                        temp___327
                        temp___328
                        temp___329
                        temp___330
                        temp___331
                        temp___332
                        temp___333
                        temp___334
                        temp___335
                        temp___336
                        temp___337
                        temp___338
                        temp___339
                        temp___340
                        temp___341
                        temp___342
                        temp___343
                        temp___344
                        temp___345
                        temp___346
                        temp___347
                        temp___348
                        temp___349
                        temp___350
                        temp___351
                        temp___352
                        temp___353
                        temp___354
                        temp___355
                        temp___356
                        temp___357
                        temp___358
                        temp___359
                        temp___360
                        temp___361
                        temp___362
                        temp___363
                        temp___364
                        temp___365
                        temp___366
                        temp___367
                        temp___368
                        temp___369
                        temp___370
                        temp___371
                        temp___372
                        temp___373
                        temp___374
                        temp___375
                        temp___376
                        temp___377
                        temp___378
                        temp___379
                        temp___380
                        temp___381
                        temp___382
                        temp___383
                        temp___384
                        temp___385
                        temp___386
                        temp___387
                        temp___388
                        temp___389
                        temp___390
                        temp___391
                        temp___392
                        temp___393
                        temp___394
                        temp___395
                        temp___396
                        temp___397
                        temp___398
                        temp___399
                        temp___400
                        temp___401
                        temp___402
                        temp___403
                        temp___404
                        temp___405
                        temp___406
                        temp___407
                        temp___408
                        temp___409
                        temp___410
                        temp___411
                        temp___412
                        temp___413
                        temp___414
                        temp___415
                        temp___416
                        temp___417
                        temp___418
                        temp___419
                        temp___420
                        temp___421
                        temp___422
                        temp___423
                        temp___424
                        temp___425
                        temp___426
                        temp___427
                        temp___428
                        temp___429
                        temp___430
                        temp___431
                        temp___432
                        temp___433
                        temp___434
                        temp___435
                        temp___436
                        temp___437
                        temp___438
                        temp___439
                        temp___440
                        temp___441
                        temp___442
                        temp___443
                        temp___444)))
      (and
        (and
          (=>
            (in_range temp___317)
            (= (to_rep (select temp___316 #x00)) temp___317))
          (=>
            (in_range temp___318)
            (= (to_rep (select temp___316 #x01)) temp___318)))
        (and
          (and
            (and
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___319)
                        (= (to_rep (select temp___316 #x02)) temp___319))
                      (=>
                        (in_range temp___320)
                        (= (to_rep (select temp___316 #x03)) temp___320)))
                    (and
                      (=>
                        (in_range temp___321)
                        (= (to_rep (select temp___316 #x04)) temp___321))
                      (=>
                        (in_range temp___322)
                        (= (to_rep (select temp___316 #x05)) temp___322))))
                  (and
                    (and
                      (=>
                        (in_range temp___323)
                        (= (to_rep (select temp___316 #x06)) temp___323))
                      (=>
                        (in_range temp___324)
                        (= (to_rep (select temp___316 #x07)) temp___324)))
                    (and
                      (=>
                        (in_range temp___325)
                        (= (to_rep (select temp___316 #x08)) temp___325))
                      (=>
                        (in_range temp___326)
                        (= (to_rep (select temp___316 #x09)) temp___326)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___327)
                        (= (to_rep (select temp___316 #x0A)) temp___327))
                      (=>
                        (in_range temp___328)
                        (= (to_rep (select temp___316 #x0B)) temp___328)))
                    (and
                      (=>
                        (in_range temp___329)
                        (= (to_rep (select temp___316 #x0C)) temp___329))
                      (=>
                        (in_range temp___330)
                        (= (to_rep (select temp___316 #x0D)) temp___330))))
                  (and
                    (and
                      (=>
                        (in_range temp___331)
                        (= (to_rep (select temp___316 #x0E)) temp___331))
                      (=>
                        (in_range temp___332)
                        (= (to_rep (select temp___316 #x0F)) temp___332)))
                    (and
                      (=>
                        (in_range temp___333)
                        (= (to_rep (select temp___316 #x10)) temp___333))
                      (=>
                        (in_range temp___334)
                        (= (to_rep (select temp___316 #x11)) temp___334))))))
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___335)
                        (= (to_rep (select temp___316 #x12)) temp___335))
                      (=>
                        (in_range temp___336)
                        (= (to_rep (select temp___316 #x13)) temp___336)))
                    (and
                      (=>
                        (in_range temp___337)
                        (= (to_rep (select temp___316 #x14)) temp___337))
                      (=>
                        (in_range temp___338)
                        (= (to_rep (select temp___316 #x15)) temp___338))))
                  (and
                    (and
                      (=>
                        (in_range temp___339)
                        (= (to_rep (select temp___316 #x16)) temp___339))
                      (=>
                        (in_range temp___340)
                        (= (to_rep (select temp___316 #x17)) temp___340)))
                    (and
                      (=>
                        (in_range temp___341)
                        (= (to_rep (select temp___316 #x18)) temp___341))
                      (=>
                        (in_range temp___342)
                        (= (to_rep (select temp___316 #x19)) temp___342)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___343)
                        (= (to_rep (select temp___316 #x1A)) temp___343))
                      (=>
                        (in_range temp___344)
                        (= (to_rep (select temp___316 #x1B)) temp___344)))
                    (and
                      (=>
                        (in_range temp___345)
                        (= (to_rep (select temp___316 #x1C)) temp___345))
                      (=>
                        (in_range temp___346)
                        (= (to_rep (select temp___316 #x1D)) temp___346))))
                  (and
                    (and
                      (=>
                        (in_range temp___347)
                        (= (to_rep (select temp___316 #x1E)) temp___347))
                      (=>
                        (in_range temp___348)
                        (= (to_rep (select temp___316 #x1F)) temp___348)))
                    (and
                      (=>
                        (in_range temp___349)
                        (= (to_rep (select temp___316 #x20)) temp___349))
                      (=>
                        (in_range temp___350)
                        (= (to_rep (select temp___316 #x21)) temp___350)))))))
            (and
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___351)
                        (= (to_rep (select temp___316 #x22)) temp___351))
                      (=>
                        (in_range temp___352)
                        (= (to_rep (select temp___316 #x23)) temp___352)))
                    (and
                      (=>
                        (in_range temp___353)
                        (= (to_rep (select temp___316 #x24)) temp___353))
                      (=>
                        (in_range temp___354)
                        (= (to_rep (select temp___316 #x25)) temp___354))))
                  (and
                    (and
                      (=>
                        (in_range temp___355)
                        (= (to_rep (select temp___316 #x26)) temp___355))
                      (=>
                        (in_range temp___356)
                        (= (to_rep (select temp___316 #x27)) temp___356)))
                    (and
                      (=>
                        (in_range temp___357)
                        (= (to_rep (select temp___316 #x28)) temp___357))
                      (=>
                        (in_range temp___358)
                        (= (to_rep (select temp___316 #x29)) temp___358)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___359)
                        (= (to_rep (select temp___316 #x2A)) temp___359))
                      (=>
                        (in_range temp___360)
                        (= (to_rep (select temp___316 #x2B)) temp___360)))
                    (and
                      (=>
                        (in_range temp___361)
                        (= (to_rep (select temp___316 #x2C)) temp___361))
                      (=>
                        (in_range temp___362)
                        (= (to_rep (select temp___316 #x2D)) temp___362))))
                  (and
                    (and
                      (=>
                        (in_range temp___363)
                        (= (to_rep (select temp___316 #x2E)) temp___363))
                      (=>
                        (in_range temp___364)
                        (= (to_rep (select temp___316 #x2F)) temp___364)))
                    (and
                      (=>
                        (in_range temp___365)
                        (= (to_rep (select temp___316 #x30)) temp___365))
                      (=>
                        (in_range temp___366)
                        (= (to_rep (select temp___316 #x31)) temp___366))))))
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___367)
                        (= (to_rep (select temp___316 #x32)) temp___367))
                      (=>
                        (in_range temp___368)
                        (= (to_rep (select temp___316 #x33)) temp___368)))
                    (and
                      (=>
                        (in_range temp___369)
                        (= (to_rep (select temp___316 #x34)) temp___369))
                      (=>
                        (in_range temp___370)
                        (= (to_rep (select temp___316 #x35)) temp___370))))
                  (and
                    (and
                      (=>
                        (in_range temp___371)
                        (= (to_rep (select temp___316 #x36)) temp___371))
                      (=>
                        (in_range temp___372)
                        (= (to_rep (select temp___316 #x37)) temp___372)))
                    (and
                      (=>
                        (in_range temp___373)
                        (= (to_rep (select temp___316 #x38)) temp___373))
                      (=>
                        (in_range temp___374)
                        (= (to_rep (select temp___316 #x39)) temp___374)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___375)
                        (= (to_rep (select temp___316 #x3A)) temp___375))
                      (=>
                        (in_range temp___376)
                        (= (to_rep (select temp___316 #x3B)) temp___376)))
                    (and
                      (=>
                        (in_range temp___377)
                        (= (to_rep (select temp___316 #x3C)) temp___377))
                      (=>
                        (in_range temp___378)
                        (= (to_rep (select temp___316 #x3D)) temp___378))))
                  (and
                    (and
                      (=>
                        (in_range temp___379)
                        (= (to_rep (select temp___316 #x3E)) temp___379))
                      (=>
                        (in_range temp___380)
                        (= (to_rep (select temp___316 #x3F)) temp___380)))
                    (=>
                      (in_range temp___381)
                      (= (to_rep (select temp___316 #x40)) temp___381)))))))
          (and
            (and
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___382)
                        (= (to_rep (select temp___316 #x41)) temp___382))
                      (=>
                        (in_range temp___383)
                        (= (to_rep (select temp___316 #x42)) temp___383)))
                    (and
                      (=>
                        (in_range temp___384)
                        (= (to_rep (select temp___316 #x43)) temp___384))
                      (=>
                        (in_range temp___385)
                        (= (to_rep (select temp___316 #x44)) temp___385))))
                  (and
                    (and
                      (=>
                        (in_range temp___386)
                        (= (to_rep (select temp___316 #x45)) temp___386))
                      (=>
                        (in_range temp___387)
                        (= (to_rep (select temp___316 #x46)) temp___387)))
                    (and
                      (=>
                        (in_range temp___388)
                        (= (to_rep (select temp___316 #x47)) temp___388))
                      (=>
                        (in_range temp___389)
                        (= (to_rep (select temp___316 #x48)) temp___389)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___390)
                        (= (to_rep (select temp___316 #x49)) temp___390))
                      (=>
                        (in_range temp___391)
                        (= (to_rep (select temp___316 #x4A)) temp___391)))
                    (and
                      (=>
                        (in_range temp___392)
                        (= (to_rep (select temp___316 #x4B)) temp___392))
                      (=>
                        (in_range temp___393)
                        (= (to_rep (select temp___316 #x4C)) temp___393))))
                  (and
                    (and
                      (=>
                        (in_range temp___394)
                        (= (to_rep (select temp___316 #x4D)) temp___394))
                      (=>
                        (in_range temp___395)
                        (= (to_rep (select temp___316 #x4E)) temp___395)))
                    (and
                      (=>
                        (in_range temp___396)
                        (= (to_rep (select temp___316 #x4F)) temp___396))
                      (=>
                        (in_range temp___397)
                        (= (to_rep (select temp___316 #x50)) temp___397))))))
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___398)
                        (= (to_rep (select temp___316 #x51)) temp___398))
                      (=>
                        (in_range temp___399)
                        (= (to_rep (select temp___316 #x52)) temp___399)))
                    (and
                      (=>
                        (in_range temp___400)
                        (= (to_rep (select temp___316 #x53)) temp___400))
                      (=>
                        (in_range temp___401)
                        (= (to_rep (select temp___316 #x54)) temp___401))))
                  (and
                    (and
                      (=>
                        (in_range temp___402)
                        (= (to_rep (select temp___316 #x55)) temp___402))
                      (=>
                        (in_range temp___403)
                        (= (to_rep (select temp___316 #x56)) temp___403)))
                    (and
                      (=>
                        (in_range temp___404)
                        (= (to_rep (select temp___316 #x57)) temp___404))
                      (=>
                        (in_range temp___405)
                        (= (to_rep (select temp___316 #x58)) temp___405)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___406)
                        (= (to_rep (select temp___316 #x59)) temp___406))
                      (=>
                        (in_range temp___407)
                        (= (to_rep (select temp___316 #x5A)) temp___407)))
                    (and
                      (=>
                        (in_range temp___408)
                        (= (to_rep (select temp___316 #x5B)) temp___408))
                      (=>
                        (in_range temp___409)
                        (= (to_rep (select temp___316 #x5C)) temp___409))))
                  (and
                    (and
                      (=>
                        (in_range temp___410)
                        (= (to_rep (select temp___316 #x5D)) temp___410))
                      (=>
                        (in_range temp___411)
                        (= (to_rep (select temp___316 #x5E)) temp___411)))
                    (and
                      (=>
                        (in_range temp___412)
                        (= (to_rep (select temp___316 #x5F)) temp___412))
                      (=>
                        (in_range temp___413)
                        (= (to_rep (select temp___316 #x60)) temp___413)))))))
            (and
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___414)
                        (= (to_rep (select temp___316 #x61)) temp___414))
                      (=>
                        (in_range temp___415)
                        (= (to_rep (select temp___316 #x62)) temp___415)))
                    (and
                      (=>
                        (in_range temp___416)
                        (= (to_rep (select temp___316 #x63)) temp___416))
                      (=>
                        (in_range temp___417)
                        (= (to_rep (select temp___316 #x64)) temp___417))))
                  (and
                    (and
                      (=>
                        (in_range temp___418)
                        (= (to_rep (select temp___316 #x65)) temp___418))
                      (=>
                        (in_range temp___419)
                        (= (to_rep (select temp___316 #x66)) temp___419)))
                    (and
                      (=>
                        (in_range temp___420)
                        (= (to_rep (select temp___316 #x67)) temp___420))
                      (=>
                        (in_range temp___421)
                        (= (to_rep (select temp___316 #x68)) temp___421)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___422)
                        (= (to_rep (select temp___316 #x69)) temp___422))
                      (=>
                        (in_range temp___423)
                        (= (to_rep (select temp___316 #x6A)) temp___423)))
                    (and
                      (=>
                        (in_range temp___424)
                        (= (to_rep (select temp___316 #x6B)) temp___424))
                      (=>
                        (in_range temp___425)
                        (= (to_rep (select temp___316 #x6C)) temp___425))))
                  (and
                    (and
                      (=>
                        (in_range temp___426)
                        (= (to_rep (select temp___316 #x6D)) temp___426))
                      (=>
                        (in_range temp___427)
                        (= (to_rep (select temp___316 #x6E)) temp___427)))
                    (and
                      (=>
                        (in_range temp___428)
                        (= (to_rep (select temp___316 #x6F)) temp___428))
                      (=>
                        (in_range temp___429)
                        (= (to_rep (select temp___316 #x70)) temp___429))))))
              (and
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___430)
                        (= (to_rep (select temp___316 #x71)) temp___430))
                      (=>
                        (in_range temp___431)
                        (= (to_rep (select temp___316 #x72)) temp___431)))
                    (and
                      (=>
                        (in_range temp___432)
                        (= (to_rep (select temp___316 #x73)) temp___432))
                      (=>
                        (in_range temp___433)
                        (= (to_rep (select temp___316 #x74)) temp___433))))
                  (and
                    (and
                      (=>
                        (in_range temp___434)
                        (= (to_rep (select temp___316 #x75)) temp___434))
                      (=>
                        (in_range temp___435)
                        (= (to_rep (select temp___316 #x76)) temp___435)))
                    (and
                      (=>
                        (in_range temp___436)
                        (= (to_rep (select temp___316 #x77)) temp___436))
                      (=>
                        (in_range temp___437)
                        (= (to_rep (select temp___316 #x78)) temp___437)))))
                (and
                  (and
                    (and
                      (=>
                        (in_range temp___438)
                        (= (to_rep (select temp___316 #x79)) temp___438))
                      (=>
                        (in_range temp___439)
                        (= (to_rep (select temp___316 #x7A)) temp___439)))
                    (and
                      (=>
                        (in_range temp___440)
                        (= (to_rep (select temp___316 #x7B)) temp___440))
                      (=>
                        (in_range temp___441)
                        (= (to_rep (select temp___316 #x7C)) temp___441))))
                  (and
                    (and
                      (=>
                        (in_range temp___442)
                        (= (to_rep (select temp___316 #x7D)) temp___442))
                      (=>
                        (in_range temp___443)
                        (= (to_rep (select temp___316 #x7E)) temp___443)))
                    (=>
                      (in_range temp___444)
                      (= (to_rep (select temp___316 #x7F)) temp___444))))))))))))

;; Goal def'vc
;; File "mlkem.adb", line 1634, characters 0-0
(assert
  (not
  (forall ((k (_ BitVec 8)) (len Int) (count Int))
    (=>
      (in_range6 k)
      (=>
        (dynamic_invariant len false false true true)
        (=>
          (dynamic_invariant1 count false false true true)
          (forall ((f_hat (Array Int t)))
            (=>
              (= f_hat f)
              (forall ((k1 (_ BitVec 8)))
                (=>
                  (= k1 #x7F)
                  (forall ((i Int))
                    (=>
                      (= i 6)
                      (=>
                        (= (and (ite (<= 0 i) true false) (ite (<= i 6)
                                                            true
                                                            false)) true)
                        (let ((temp___3025 (power 2 (- 7 i))))
                          (=>
                            (exists ((i1 Int))
                              (and
                                (and (<= 1 i1) (<= i1 7))
                                (= temp___3025 (power 2 i1))))
                            (forall ((len1 Int))
                              (=>
                                (= len1 temp___3025)
                                (let ((temp___3030 (power 2 i)))
                                  (=>
                                    (exists ((i1 Int))
                                      (and
                                        (and (<= 0 i1) (<= i1 6))
                                        (= temp___3030 (power 2 i1))))
                                    (forall ((count1 Int))
                                      (=>
                                        (= count1 temp___3030)
                                        (forall ((r240b Int))
                                          (=>
                                            (= r240b (- count1 1))
                                            (=>
                                              (in_range1 r240b)
                                              (forall ((f_hat1 (Array Int t)) (k2 (_ BitVec 8)) (j Int))
                                                (=>
                                                  (exists ((j1 Int))
                                                    (and
                                                      (= j1 0)
                                                      (ite (= (and (ite (<= 0 j1)
                                                                    true
                                                                    false) 
                                                        (ite (<= j1 r240b)
                                                          true
                                                          false)) true)
                                                        (exists ((k3 (_ BitVec 8)))
                                                          (and
                                                            (and
                                                              (= (* count1 len1) 128)
                                                              (and
                                                                (<= (* (* j 2) len1) 252)
                                                                (= (bv2nat k3) (- (- (+ 
                                                                (power
                                                                  2
                                                                  i) count1) j) 1))))
                                                            (and
                                                              (= (and 
                                                              (ite (and
                                                                    (dynamic_property
                                                                    0
                                                                    r240b
                                                                    j)
                                                                    (in_range6
                                                                    k3))
                                                                true
                                                                false) 
                                                              (ite (and
                                                                    (<= 0 j)
                                                                    (<= j r240b))
                                                                true
                                                                false)) true)
                                                              (let ((o (* j 2)))
                                                                (and
                                                                  (in_range1
                                                                    o)
                                                                  (let ((o1 (* o len1)))
                                                                    (and
                                                                    (in_range1
                                                                    o1)
                                                                    (and
                                                                    (in_range2
                                                                    o1)
                                                                    (exists 
                                                                    ((o2 (_ BitVec 16)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    zeta_expc k3)) o2)
                                                                    (let ((o3 (bvsub k3 #x01)))
                                                                    (and
                                                                    (in_range6
                                                                    o3)
                                                                    (and
                                                                    (= k2 o3)
                                                                    (= j r240b))))))))))))))
                                                        (and
                                                          (and
                                                            (= f_hat1 f_hat)
                                                            (= k2 k1))
                                                          (= j j1)))))
                                                  (forall ((k3 (_ BitVec 8)) (len2 Int) (count2 Int) (i1 Int) (r240b1 Int))
                                                    (=>
                                                      (= (bv2nat k3) (- 
                                                      (power
                                                        2
                                                        i1) 1))
                                                      (=>
                                                        (= (and (ite 
                                                                  (and
                                                                    (and
                                                                    (and
                                                                    (and
                                                                    (in_range6
                                                                    k3)
                                                                    (dynamic_invariant
                                                                    len2
                                                                    false
                                                                    true
                                                                    true
                                                                    true))
                                                                    (dynamic_invariant1
                                                                    count2
                                                                    false
                                                                    true
                                                                    true
                                                                    true))
                                                                    (in_range3
                                                                    i1))
                                                                    (in_range1
                                                                    r240b1))
                                                                  true
                                                                  false) 
                                                        (ite (and
                                                               (<= 0 i1)
                                                               (<= i1 6))
                                                          true
                                                          false)) true)
                                                        (=>
                                                          (not (= i1 0))
                                                          (forall ((i2 Int))
                                                            (=>
                                                              (= i2 (- i1 1))
                                                              (let ((temp___30251 
                                                                (power
                                                                  2
                                                                  (- 7 i2))))
                                                                (=>
                                                                  (exists 
                                                                    ((i3 Int))
                                                                    (and
                                                                    (and
                                                                    (<= 1 i3)
                                                                    (<= i3 7))
                                                                    (= temp___30251 
                                                                    (power
                                                                    2
                                                                    i3))))
                                                                  (forall 
                                                                    ((len3 Int))
                                                                    (=>
                                                                    (= len3 temp___30251)
                                                                    (let ((temp___30301 
                                                                    (power
                                                                    2
                                                                    i2)))
                                                                    (=>
                                                                    (exists 
                                                                    ((i3 Int))
                                                                    (and
                                                                    (and
                                                                    (<= 0 i3)
                                                                    (<= i3 6))
                                                                    (= temp___30301 
                                                                    (power
                                                                    2
                                                                    i3))))
                                                                    (forall 
                                                                    ((count3 Int))
                                                                    (=>
                                                                    (= count3 temp___30301)
                                                                    (forall 
                                                                    ((r240b2 Int))
                                                                    (=>
                                                                    (= r240b2 (- count3 1))
                                                                    (=>
                                                                    (in_range1
                                                                    r240b2)
                                                                    (forall 
                                                                    ((k4 (_ BitVec 8)))
                                                                    (=>
                                                                    (exists 
                                                                    ((j1 Int))
                                                                    (and
                                                                    (= j1 0)
                                                                    (ite (= (and 
                                                                    (ite (<= 0 j1)
                                                                    true
                                                                    false) 
                                                                    (ite (<= j1 r240b2)
                                                                    true
                                                                    false)) true)
                                                                    (exists 
                                                                    ((k5 (_ BitVec 8)) (j2 Int))
                                                                    (and
                                                                    (and
                                                                    (= (* count3 len3) 128)
                                                                    (and
                                                                    (<= (* (* j2 2) len3) 252)
                                                                    (= (bv2nat k5) (- (- (+ 
                                                                    (power
                                                                    2
                                                                    i2) count3) j2) 1))))
                                                                    (and
                                                                    (= (and 
                                                                    (ite 
                                                                    (and
                                                                    (dynamic_property
                                                                    0
                                                                    r240b2
                                                                    j2)
                                                                    (in_range6
                                                                    k5))
                                                                    true
                                                                    false) 
                                                                    (ite 
                                                                    (and
                                                                    (<= 0 j2)
                                                                    (<= j2 r240b2))
                                                                    true
                                                                    false)) true)
                                                                    (let ((o (* j2 2)))
                                                                    (and
                                                                    (in_range1
                                                                    o)
                                                                    (let ((o1 (* o len3)))
                                                                    (and
                                                                    (in_range1
                                                                    o1)
                                                                    (and
                                                                    (in_range2
                                                                    o1)
                                                                    (exists 
                                                                    ((o2 (_ BitVec 16)))
                                                                    (and
                                                                    (= 
                                                                    (to_rep
                                                                    (select 
                                                                    zeta_expc k5)) o2)
                                                                    (let ((o3 (bvsub k5 #x01)))
                                                                    (and
                                                                    (in_range6
                                                                    o3)
                                                                    (and
                                                                    (= k4 o3)
                                                                    (= j2 r240b2))))))))))))))
                                                                    (= k4 k3))))
                                                                    (= (bv2nat k4) (- 
                                                                    (power
                                                                    2
                                                                    i2) 1)))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(exit)
